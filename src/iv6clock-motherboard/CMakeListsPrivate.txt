# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "328p16m" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)


SET(CMAKE_C_COMPILER "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-atmelavr/bin/avr-gcc.exe")
SET(CMAKE_CXX_COMPILER "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-atmelavr/bin/avr-g++.exe")
SET(CMAKE_CXX_FLAGS "-fno-exceptions -fno-threadsafe-statics -fpermissive -std=gnu++11 -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega328p")
SET(CMAKE_C_FLAGS "-std=gnu11 -fno-fat-lto-objects -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega328p")

SET(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "328p16m")
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_AVR_MICRODUINO_CORE')
    add_definitions(-D'F_CPU=16000000L')
    add_definitions(-D'ARDUINO_ARCH_AVR')
    add_definitions(-D'ARDUINO=10808')
    add_definitions(-D'__AVR_ATmega328P__')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/MsTimer2")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/FastLED_ID126")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/libraries/SPI/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/DS3231_ID1379")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/libraries/Wire/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/DHTlib")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/cores/arduino")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/variants/standard")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/AccelStepper/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/BME280_ID901/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/BME280_Light")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/DHT12")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/DS1307RTC")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/DallasTemperature_ID54")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/IRremote/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/Low-Power_ID38")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/MSGEQ7_ID459/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/OneWire_ID1")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/TM1637_ID258")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/Time_ID44")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/lib/U8g2_ID942/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-arduino-avr/libraries/HID/src")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/7.3.0/include")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/7.3.0/include-fixed")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-atmelavr/avr/include")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/328p16m/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
